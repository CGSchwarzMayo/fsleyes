# This routine replaces the value from a texture lookup if the texture
# coordinates were out of bounds (less than 0 or greater than 1).
#
# Inputs:
#   texcoord  - 3D texture coordinates
#   origval   - Value that was retrieved from the texture lookup.
#   borderval - Value to use if the coordinates are out of bounds.
#
# Result:
#   result    - origval if the texture coords are in bounds,
#               or borderval if they're out of bounds.


# Take a copy of origval - after this,
# tb_origval is used as a temp variable
# to store the texture coordinates.
MOV {{ out_result }}.x, {{ origval }}.x;
MOV {{ origval }},  {{ texcoord }};

# Clobber the texture value if the tex
# coords on any dimension are less than 0
SUB {{ origval }}, {{ origval }}, {0.0000001, 0.0000001, 0.0000001, 0};

CMP {{ out_result }}.x, {{ origval }}.x, {{ borderval }}.x, {{ out_result }}.x;
CMP {{ out_result }}.x, {{ origval }}.y, {{ borderval }}.x, {{ out_result }}.x;
CMP {{ out_result }}.x, {{ origval }}.z, {{ borderval }}.x, {{ out_result }}.x;

# Or if the tex coords on any
# dimension are greater than 1
MOV {{ origval }}, 1;
SUB {{ origval }}, {{ origval }}, {{ texcoord }};

CMP {{ out_result }}.x, {{ origval }}.x, {{ borderval }}.x, {{ out_result }}.x;
CMP {{ out_result }}.x, {{ origval }}.y, {{ borderval }}.x, {{ out_result }}.x;
CMP {{ out_result }}.x, {{ origval }}.z, {{ borderval }}.x, {{ out_result }}.x;
