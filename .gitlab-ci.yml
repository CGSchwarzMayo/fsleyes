###########################################################################
# This file defines the build process for fsleyes, as hosted at:
#
#    https://git.fmrib.ox.ac.uk/fsl/fsleyes/fsleyes
#
# The build pipeline currently comprises the following stages:
#
#    1. test:      Unit tests
#
#    2. style:     Check coding style
#
#    3. doc:       Building user and API documentation
#
#    4. build:     Building source and wheel distributions for
#                  releases
#
#    6. deploy:    Uploading the source and wheel distributions
#                  and the documentation to hosting servers.
#
# Custom docker images are used for several jobs - these images are
# available at:
#
#    https://hub.docker.com/u/pauldmccarthy/
#
# The test and style stages are executed on all branches of upstream and
# fork repositories.
#
# The doc stage executed on all branches of the upastream repository.

# The build and deploy stages are only executed on release tags on
# the upstream repository.
#
# Source and wheel distributions are deployed to pypi for release tags.
#
# User and API documentation is deployed to a hosting server for all
# branches.
###########################################################################


stages:
 - test
 - style
 - doc
 - build
 - deploy


#################################################################################
# A number of variables must be set for the jobs to work. The following
# variables are implicitly defined in any gitlab CI job:
#
#   - CI_PROJECT_PATH    - gitlab namespace/project
#   - CI_COMMIT_REF_NAME - branch name, provided by gitlab
#   - CI_COMMIT_TAG      - present if build is running on a tag
#
# These variables must be explicitly set as "secret" variables:
#
#   - SSH_PRIVATE_KEY_GIT            - private key for git login to remote host
#                                      (UPSTREAM_URL)
#
#   - SSH_PRIVATE_KEY_APIDOC_DEPLOY  - private key for rsyncing documentation
#                                      to remote host (APIDOC_HOST)
#
#   - SSH_PRIVATE_KEY_USERDOC_DEPLOY - private key for rsyncing documentation
#                                      to remote host (USERDOC_HOST)
#
#   - APIDOC_HOST:                   - Username@host to upload API
#                                      documentation to (e.g.
#                                      "paulmc@jalapeno.fmrib.ox.ac.uk")
#
#   - USERDOC_HOST:                  - Username@host to upload user
#                                      documentation to (e.g.
#                                      "paulmc@jalapeno.fmrib.ox.ac.uk")
#
#   - TWINE_USERNAME:                - Username to use when uploading to pypi
#
#   - TWINE_PASSWORD:                - Password to use when uploading to pypi
#
#   - TWINE_REPOSITORY_URL:          - Pypi repository to upload to
#
#   - ZENODO_URL:                    - Zenodo URL to deposit release file to.
#
#   - ZENODO_TOKEN:                  - Zenodo access token.
#
#   - ZENODO_DEPOSIT_ID:             - Deposit ID of previous Zenodo deposit.
###############################################################################


variables:
  UPSTREAM_PROJECT:     "fsl/fsleyes/fsleyes"
  UPSTREAM_URL:         "git@git.fmrib.ox.ac.uk"


####################################
# These anchors are used to restrict
# when and where jobs are executed.
####################################


.only_upstream: &only_upstream
  only:
    - branches@fsl/fsleyes/fsleyes


.only_master: &only_master
  only:
    - master@fsl/fsleyes/fsleyes


.only_releases: &only_releases
  only:
    - tags@fsl/fsleyes/fsleyes


.except_releases: &except_releases
  except:
    - tags


.setup_ssh: &setup_ssh
  before_script:
    - bash ./.ci/setup_ssh.sh


###################################################
# The patch_version anchor contains a before_script
# section which is run on release builds, and makes
# sure that the version in the code is up to date
# (i.e. equal to the tag name).
###################################################


.patch_version: &patch_version
  before_script:
    - bash ./.ci/patch_version.sh


############
# Test stage
############


.test: &test_template
  <<: *setup_ssh

  # Releases are just tags on a release
  # branch, so we don't need to test them.
  <<: *except_releases

  tags:
    - docker

  script:
    - bash ./.ci/test_template.sh


test:wxpython3:
  stage: test
  image: pauldmccarthy/fsleyes-py27-wxpy3-gtk2
  <<: *test_template


test:2.7:
  stage: test
  image: pauldmccarthy/fsleyes-py27-wxpy4-gtk2
  <<: *test_template


test:3.4:
  stage: test
  image: pauldmccarthy/fsleyes-py34-wxpy4-gtk2
  <<: *test_template


test:3.5:
  stage: test
  image: pauldmccarthy/fsleyes-py35-wxpy4-gtk2
  <<: *test_template


test:3.6:
  stage: test
  image: pauldmccarthy/fsleyes-py36-wxpy4-gtk2
  <<: *test_template


test:build-pypi-dist:
  stage: test
  image: pauldmccarthy/fsleyes-py35-wxpy4-gtk2
  <<: *except_releases

  tags:
    - docker

  script:
   - source /test.venv/bin/activate
   - bash ./.ci/build_pypi_dist.sh


#############
# Style stage
#############


style:
  stage: style
  image: pauldmccarthy/fsleyes-py35-wxpy4-gtk2
  <<: *test_template
  variables:
    TEST_STYLE: "true"


###########
# Doc stage
###########


.build_doc: &build_doc
  <<: *only_upstream
  <<: *patch_version

  tags:
    - docker

  stage: doc
  image: python:3.5


build-userdoc:
  <<: *build_doc
  <<: *patch_version

  script:
    - bash ./.ci/build_userdoc.sh

  artifacts:
    expire_in: 1 day
    paths:
      - userdoc/$CI_COMMIT_REF_NAME


build-apidoc:
  <<: *build_doc
  <<: *patch_version

  script:
    - bash ./.ci/build_apidoc.sh

  artifacts:
    expire_in: 1 day
    paths:
      - apidoc/$CI_COMMIT_REF_NAME


#############
# Build stage
#############


build-pypi-dist:
  <<: *only_releases
  <<: *patch_version

  stage: build
  image: pauldmccarthy/fsleyes-py35-wxpy4-gtk2

  tags:
    - docker

  script:
   - bash ./.ci/build_pypi_dist.sh

  artifacts:
    expire_in: 1 day
    paths:
      - dist/*tar.gz
      - dist/*whl


##############
# Deploy stage
##############


deploy-doc:
  <<: *only_upstream
  <<: *setup_ssh
  stage: deploy
  when:  manual
  image: python:3.5

  tags:
    - docker

  dependencies:
    - build-userdoc
    - build-apidoc

  script:
    - bash ./.ci/deploy_doc.sh


deploy-pypi:
  <<: *only_releases
  <<: *setup_ssh
  stage: deploy
  when:  manual
  image: python:3.5

  tags:
    - docker

  dependencies:
    - build-pypi-dist

  script:
    - bash ./.ci/deploy_pypi.sh


deploy-zenodo:
  <<: *only_releases
  <<: *setup_ssh
  stage: deploy
  when:  manual
  image: python:3.6

  tags:
    - docker

  dependencies:
    - build-pypi-dist

  script:
    - bash ./.ci/zenodo_deposit.sh fsleyes "$ZENODO_URL" "$ZENODO_TOKEN" "$ZENODO_DEPOSIT_ID"
